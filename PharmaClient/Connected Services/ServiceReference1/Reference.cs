//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PharmaClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListMedicines", Namespace="http://schemas.datacontract.org/2004/07/WCFPharma")]
    [System.SerializableAttribute()]
    public partial class ListMedicines : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmaClient.ServiceReference1.Medicine[] mediField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmaClient.ServiceReference1.Medicine[] medi {
            get {
                return this.mediField;
            }
            set {
                if ((object.ReferenceEquals(this.mediField, value) != true)) {
                    this.mediField = value;
                    this.RaisePropertyChanged("medi");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medicine", Namespace="http://schemas.datacontract.org/2004/07/WCFPharma")]
    [System.SerializableAttribute()]
    public partial class Medicine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmaClient.ServiceReference1.Dealer DealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmaClient.ServiceReference1.Manufacturer ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmaClient.ServiceReference1.Dealer Dealer {
            get {
                return this.DealerField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerField, value) != true)) {
                    this.DealerField = value;
                    this.RaisePropertyChanged("Dealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmaClient.ServiceReference1.Manufacturer Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicineID {
            get {
                return this.MedicineIDField;
            }
            set {
                if ((this.MedicineIDField.Equals(value) != true)) {
                    this.MedicineIDField = value;
                    this.RaisePropertyChanged("MedicineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dealer", Namespace="http://schemas.datacontract.org/2004/07/WCFPharma")]
    [System.SerializableAttribute()]
    public partial class Dealer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DealerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DealerID {
            get {
                return this.DealerIDField;
            }
            set {
                if ((this.DealerIDField.Equals(value) != true)) {
                    this.DealerIDField = value;
                    this.RaisePropertyChanged("DealerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Manufacturer", Namespace="http://schemas.datacontract.org/2004/07/WCFPharma")]
    [System.SerializableAttribute()]
    public partial class Manufacturer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManufacturerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManufacturerID {
            get {
                return this.ManufacturerIDField;
            }
            set {
                if ((this.ManufacturerIDField.Equals(value) != true)) {
                    this.ManufacturerIDField = value;
                    this.RaisePropertyChanged("ManufacturerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListDealers", Namespace="http://schemas.datacontract.org/2004/07/WCFPharma")]
    [System.SerializableAttribute()]
    public partial class ListDealers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmaClient.ServiceReference1.Dealer[] delsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmaClient.ServiceReference1.Dealer[] dels {
            get {
                return this.delsField;
            }
            set {
                if ((object.ReferenceEquals(this.delsField, value) != true)) {
                    this.delsField = value;
                    this.RaisePropertyChanged("dels");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListManufacturers", Namespace="http://schemas.datacontract.org/2004/07/WCFPharma")]
    [System.SerializableAttribute()]
    public partial class ListManufacturers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmaClient.ServiceReference1.Manufacturer[] mansField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmaClient.ServiceReference1.Manufacturer[] mans {
            get {
                return this.mansField;
            }
            set {
                if ((object.ReferenceEquals(this.mansField, value) != true)) {
                    this.mansField = value;
                    this.RaisePropertyChanged("mans");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListLedger", Namespace="http://schemas.datacontract.org/2004/07/WCFPharma")]
    [System.SerializableAttribute()]
    public partial class ListLedger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmaClient.ServiceReference1.Ledger[] ledgField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmaClient.ServiceReference1.Ledger[] ledg {
            get {
                return this.ledgField;
            }
            set {
                if ((object.ReferenceEquals(this.ledgField, value) != true)) {
                    this.ledgField = value;
                    this.RaisePropertyChanged("ledg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ledger", Namespace="http://schemas.datacontract.org/2004/07/WCFPharma")]
    [System.SerializableAttribute()]
    public partial class Ledger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PharmaClient.ServiceReference1.Medicine MedicineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entry {
            get {
                return this.EntryField;
            }
            set {
                if ((this.EntryField.Equals(value) != true)) {
                    this.EntryField = value;
                    this.RaisePropertyChanged("Entry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PharmaClient.ServiceReference1.Medicine Medicine {
            get {
                return this.MedicineField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineField, value) != true)) {
                    this.MedicineField = value;
                    this.RaisePropertyChanged("Medicine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckLogin", ReplyAction="http://tempuri.org/IService1/CheckLoginResponse")]
        bool CheckLogin(int uname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckLogin", ReplyAction="http://tempuri.org/IService1/CheckLoginResponse")]
        System.Threading.Tasks.Task<bool> CheckLoginAsync(int uname, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMedicines", ReplyAction="http://tempuri.org/IService1/GetAllMedicinesResponse")]
        PharmaClient.ServiceReference1.ListMedicines GetAllMedicines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMedicines", ReplyAction="http://tempuri.org/IService1/GetAllMedicinesResponse")]
        System.Threading.Tasks.Task<PharmaClient.ServiceReference1.ListMedicines> GetAllMedicinesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllDealers", ReplyAction="http://tempuri.org/IService1/GetAllDealersResponse")]
        PharmaClient.ServiceReference1.ListDealers GetAllDealers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllDealers", ReplyAction="http://tempuri.org/IService1/GetAllDealersResponse")]
        System.Threading.Tasks.Task<PharmaClient.ServiceReference1.ListDealers> GetAllDealersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetDealer", ReplyAction="http://tempuri.org/IService1/SetDealerResponse")]
        void SetDealer(string n, string p, string e, string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetDealer", ReplyAction="http://tempuri.org/IService1/SetDealerResponse")]
        System.Threading.Tasks.Task SetDealerAsync(string n, string p, string e, string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllManufacturers", ReplyAction="http://tempuri.org/IService1/GetAllManufacturersResponse")]
        PharmaClient.ServiceReference1.ListManufacturers GetAllManufacturers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllManufacturers", ReplyAction="http://tempuri.org/IService1/GetAllManufacturersResponse")]
        System.Threading.Tasks.Task<PharmaClient.ServiceReference1.ListManufacturers> GetAllManufacturersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetManufacturer", ReplyAction="http://tempuri.org/IService1/SetManufacturerResponse")]
        void SetManufacturer(string n, string p, string e, string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetManufacturer", ReplyAction="http://tempuri.org/IService1/SetManufacturerResponse")]
        System.Threading.Tasks.Task SetManufacturerAsync(string n, string p, string e, string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetMedicine", ReplyAction="http://tempuri.org/IService1/SetMedicineResponse")]
        void SetMedicine(string name, string price, string stock, string delid, string manid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetMedicine", ReplyAction="http://tempuri.org/IService1/SetMedicineResponse")]
        System.Threading.Tasks.Task SetMedicineAsync(string name, string price, string stock, string delid, string manid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetLedger", ReplyAction="http://tempuri.org/IService1/SetLedgerResponse")]
        bool SetLedger(string customer, string medicineID, string quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetLedger", ReplyAction="http://tempuri.org/IService1/SetLedgerResponse")]
        System.Threading.Tasks.Task<bool> SetLedgerAsync(string customer, string medicineID, string quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLedgers", ReplyAction="http://tempuri.org/IService1/GetAllLedgersResponse")]
        PharmaClient.ServiceReference1.ListLedger GetAllLedgers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLedgers", ReplyAction="http://tempuri.org/IService1/GetAllLedgersResponse")]
        System.Threading.Tasks.Task<PharmaClient.ServiceReference1.ListLedger> GetAllLedgersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteContract", ReplyAction="http://tempuri.org/IService1/DeleteContractResponse")]
        bool DeleteContract(int entity, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteContract", ReplyAction="http://tempuri.org/IService1/DeleteContractResponse")]
        System.Threading.Tasks.Task<bool> DeleteContractAsync(int entity, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateStock", ReplyAction="http://tempuri.org/IService1/UpdateStockResponse")]
        bool UpdateStock(int id, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateStock", ReplyAction="http://tempuri.org/IService1/UpdateStockResponse")]
        System.Threading.Tasks.Task<bool> UpdateStockAsync(int id, int quantity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : PharmaClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<PharmaClient.ServiceReference1.IService1>, PharmaClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckLogin(int uname, string password) {
            return base.Channel.CheckLogin(uname, password);
        }
        
        public System.Threading.Tasks.Task<bool> CheckLoginAsync(int uname, string password) {
            return base.Channel.CheckLoginAsync(uname, password);
        }
        
        public PharmaClient.ServiceReference1.ListMedicines GetAllMedicines() {
            return base.Channel.GetAllMedicines();
        }
        
        public System.Threading.Tasks.Task<PharmaClient.ServiceReference1.ListMedicines> GetAllMedicinesAsync() {
            return base.Channel.GetAllMedicinesAsync();
        }
        
        public PharmaClient.ServiceReference1.ListDealers GetAllDealers() {
            return base.Channel.GetAllDealers();
        }
        
        public System.Threading.Tasks.Task<PharmaClient.ServiceReference1.ListDealers> GetAllDealersAsync() {
            return base.Channel.GetAllDealersAsync();
        }
        
        public void SetDealer(string n, string p, string e, string a) {
            base.Channel.SetDealer(n, p, e, a);
        }
        
        public System.Threading.Tasks.Task SetDealerAsync(string n, string p, string e, string a) {
            return base.Channel.SetDealerAsync(n, p, e, a);
        }
        
        public PharmaClient.ServiceReference1.ListManufacturers GetAllManufacturers() {
            return base.Channel.GetAllManufacturers();
        }
        
        public System.Threading.Tasks.Task<PharmaClient.ServiceReference1.ListManufacturers> GetAllManufacturersAsync() {
            return base.Channel.GetAllManufacturersAsync();
        }
        
        public void SetManufacturer(string n, string p, string e, string a) {
            base.Channel.SetManufacturer(n, p, e, a);
        }
        
        public System.Threading.Tasks.Task SetManufacturerAsync(string n, string p, string e, string a) {
            return base.Channel.SetManufacturerAsync(n, p, e, a);
        }
        
        public void SetMedicine(string name, string price, string stock, string delid, string manid) {
            base.Channel.SetMedicine(name, price, stock, delid, manid);
        }
        
        public System.Threading.Tasks.Task SetMedicineAsync(string name, string price, string stock, string delid, string manid) {
            return base.Channel.SetMedicineAsync(name, price, stock, delid, manid);
        }
        
        public bool SetLedger(string customer, string medicineID, string quantity) {
            return base.Channel.SetLedger(customer, medicineID, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> SetLedgerAsync(string customer, string medicineID, string quantity) {
            return base.Channel.SetLedgerAsync(customer, medicineID, quantity);
        }
        
        public PharmaClient.ServiceReference1.ListLedger GetAllLedgers() {
            return base.Channel.GetAllLedgers();
        }
        
        public System.Threading.Tasks.Task<PharmaClient.ServiceReference1.ListLedger> GetAllLedgersAsync() {
            return base.Channel.GetAllLedgersAsync();
        }
        
        public bool DeleteContract(int entity, int id) {
            return base.Channel.DeleteContract(entity, id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteContractAsync(int entity, int id) {
            return base.Channel.DeleteContractAsync(entity, id);
        }
        
        public bool UpdateStock(int id, int quantity) {
            return base.Channel.UpdateStock(id, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateStockAsync(int id, int quantity) {
            return base.Channel.UpdateStockAsync(id, quantity);
        }
    }
}
